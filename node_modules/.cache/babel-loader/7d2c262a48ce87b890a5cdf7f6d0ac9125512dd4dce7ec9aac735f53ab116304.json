{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { notificationActions } from './notificationSlice';\nconst initialAddItem = {\n  items: []\n};\nconst addCartItemSlice = createSlice({\n  name: 'addCartItem',\n  initialState: initialAddItem,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === Number(newItem.id));\n      if (!existingItem) {\n        state.items.push(newItem);\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = addCartItem => {\n  return dispatch => {\n    dispatch(notificationActions.addNotification({\n      show: true,\n      status: 'sending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const res = fetch('https://book-shop-dc783-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(addCartItem),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    res.then(res => {\n      if (res.ok) {\n        res.json().then(data => {\n          console.log(data);\n          dispatch(notificationActions.addNotification({\n            show: true,\n            status: 'success',\n            title: 'Success!',\n            message: 'Sent cart data successfully!'\n          }));\n        });\n      } else {\n        console.log('Error has occured');\n        dispatch(notificationActions.addNotification({\n          show: true,\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending error message failed!'\n        }));\n      }\n    });\n  };\n};\nexport const addCartItemActions = addCartItemSlice.actions;\nexport default addCartItemSlice.reducer;\n\n// {\n//     id : newItem.id,\n//     price : newItem.price,\n//     quantity : 1,\n//     title : newItem.title\n// }","map":{"version":3,"names":["createSlice","notificationActions","initialAddItem","items","addCartItemSlice","name","initialState","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","Number","push","quantity","totalPrice","price","removeItem","filter","sendCartData","addCartItem","dispatch","addNotification","show","status","title","message","res","fetch","method","body","JSON","stringify","headers","then","ok","json","data","console","log","addCartItemActions","actions","reducer"],"sources":["C:/Users/Public/Sharpener/shopping_cart_react_redux/src/store/addCartItem.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"; \r\nimport { notificationActions } from './notificationSlice'; \r\n\r\nconst initialAddItem = { items : [] , }\r\n\r\nconst addCartItemSlice = createSlice({\r\n    name : 'addCartItem',\r\n    initialState : initialAddItem,\r\n    reducers : {\r\n        addItem(state,action){\r\n\r\n            const newItem = action.payload\r\n            const existingItem = state.items.find((item) => item.id === Number(newItem.id))\r\n           \r\n            if(!existingItem){\r\n                state.items.push(newItem)\r\n            }\r\n            else{\r\n                existingItem.quantity++ ;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItem(state,action){\r\n            const id = action.payload\r\n            const existingItem = state.items.find((item) => item.id === id)\r\n            \r\n            if(existingItem.quantity ===1){\r\n                state.items = state.items.filter((item)=> item.id !== id)\r\n            }\r\n            else{\r\n                existingItem.quantity--\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst sendCartData = (addCartItem) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        \r\n       \r\n        dispatch(notificationActions.addNotification({show:true , status:'sending',title:'Sending...', message:'Sending cart data!'}))\r\n\r\n        const res = fetch('https://book-shop-dc783-default-rtdb.firebaseio.com/cart.json',{\r\n        method : 'PUT',\r\n        body : JSON.stringify(addCartItem),\r\n        headers : {\r\n          'content-type' : 'application/json'\r\n        }\r\n      })\r\n  \r\n      \r\n  \r\n      res.then(res => {\r\n         if(res.ok){\r\n              res.json().then(data => {\r\n                  console.log(data)\r\n                  dispatch(notificationActions.addNotification({show : true ,status:'success',title:'Success!',message:'Sent cart data successfully!'}))\r\n  \r\n              })\r\n         }\r\n         else{\r\n              console.log('Error has occured')\r\n              dispatch(notificationActions.addNotification({show : true ,status:'error',title:'Error!',message:'Sending error message failed!'}))\r\n             \r\n         }\r\n      }) \r\n      \r\n    \r\n    }\r\n}\r\n\r\nexport const addCartItemActions = addCartItemSlice.actions\r\n\r\nexport default addCartItemSlice.reducer\r\n\r\n\r\n// {\r\n//     id : newItem.id,\r\n//     price : newItem.price,\r\n//     quantity : 1,\r\n//     title : newItem.title\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}